{"version":3,"sources":["../../../../src/http/core/agents/request-password-recover.ts","../../../../src/http/_env/index.ts","../../../../src/lib/prisma.ts","../../../../src/lib/resend.ts","../../../../src/utils/emails/reset-password-email.tsx","../../../../src/utils/generate-recovery-code.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify'\nimport type { ZodTypeProvider } from 'fastify-type-provider-zod'\nimport { env } from 'http/_env'\nimport { prisma } from 'lib/prisma'\nimport { resend } from 'lib/resend'\nimport { ResetPasswordEmail } from 'utils/emails/reset-password-email'\nimport { generateRecoveryCode } from 'utils/generate-recovery-code'\nimport { z } from 'zod'\n\nexport async function requestPasswordRecover(app: FastifyInstance) {\n  app.withTypeProvider<ZodTypeProvider>().post(\n    '/agents/password/recover',\n    {\n      schema: {\n        tags: ['agents'],\n        summary: 'Requisi√ß√£o de redefini√ß√£o de senha',\n        security: [{ bearerAuth: [] }],\n        body: z.object({\n          email: z.string().email(),\n        }),\n        response: {\n          200: z.null(),\n        },\n      },\n    },\n    async (request, reply) => {\n      const { email } = request.body\n\n      const agentFromEmail = await prisma.agent.findUnique({\n        where: {\n          email,\n        },\n      })\n\n      if (!agentFromEmail) {\n        // N√£o queremos que as pessoas saibam se o usu√°rio realmente existe\n        return reply.status(200).send()\n      }\n\n      const { code } = await prisma.token.create({\n        data: {\n          type: 'PASSWORD_RECOVER',\n          agentId: agentFromEmail.id,\n          code: generateRecoveryCode(),\n        },\n      })\n\n      await resend.emails.send({\n        from: 'üìß OAB Atende <oabatende@oabma.com.br>',\n        // FIXME: Em ambiente de desenvolvimento envia para o email do desenvolvedor\n        to: env.NODE_ENV === 'PRODUCTION' ? email : 'hilquiasfmelo@hotmail.com',\n        subject: 'üîÑ Redefini√ß√£o de Senha - OAB Atende',\n        react: ResetPasswordEmail({\n          name: agentFromEmail.name,\n          code,\n          link: `${env.WEB_URL}/reset-password?code=${code}`,\n        }),\n      })\n\n      // Excluir o token ap√≥s 2 minutos (120000ms)\n      setTimeout(async () => {\n        await prisma.token.delete({\n          where: { code },\n        })\n      }, 120000)\n\n      // Somente em ambiente de desenvolvimento mostra no console\n      if (env.NODE_ENV === 'DEVELOPMENT') {\n        console.log(\n          '> ‚úÖ Email de redefini√ß√£o de senha enviado com sucesso.',\n          code\n        )\n      }\n\n      return reply.status(200).send()\n    }\n  )\n}\n","import 'dotenv/config'\nimport { z } from 'zod'\n\nconst envSchema = z.object({\n  NODE_ENV: z.enum(['development', 'production']).default('development'),\n  PORT: z.coerce.number().default(3892),\n  DATABASE_URL: z.string().url(),\n  PASSWORD_ADMIN_FULL: z.string().min(8),\n  EMAIL_ADMIN_FULL: z.string().email(),\n  JWT_SECRET: z.string().min(8),\n  RESEND_API_KEY: z.string(),\n  WEB_URL: z.string().url(),\n  API_PROTHEUS_DATA_URL: z.string().url(),\n  API_PROTHEUS_FIN_URL: z.string().url(),\n})\n\nconst _env = envSchema.safeParse(process.env)\n\nif (_env.success === false) {\n  console.error(\n    '> ‚ùå Vari√°veis de ambiente inv√°lidas, verifique o arquivo .env',\n    _env.error.format()\n  )\n\n  throw new Error('‚ùå Houve um erro ao carregar as vari√°veis de ambiente.')\n}\n\nexport const env = _env.data\n","import { PrismaClient } from '@prisma/client'\nimport { env } from 'http/_env'\n\nexport const prisma = new PrismaClient({\n  // Gera logs de queries apenas em ambiente de desenvolvimento\n  log: env.NODE_ENV === 'DEVELOPMENT' ? ['query'] : [],\n})\n","import { env } from 'http/_env'\nimport { Resend } from 'resend'\n\nexport const resend = new Resend(env.RESEND_API_KEY)\n","import {\n  Body,\n  Button,\n  Container,\n  Head,\n  Heading,\n  Hr,\n  Html,\n  Preview,\n  Section,\n  Tailwind,\n  Text,\n} from '@react-email/components'\nimport * as React from 'react'\n\ninterface PasswordResetEmailProps {\n  name: string\n  code: string\n  link: string\n}\n\n// @ts-ignore somente para o react-email\nReact.version\n\nexport const ResetPasswordEmail = ({\n  name,\n  code,\n  link,\n}: PasswordResetEmailProps) => {\n  const currentYear = new Date().getFullYear()\n  const sendDate = new Date().toLocaleDateString('pt-BR')\n\n  return (\n    <Html>\n      <Head />\n      <Preview>\n        Recebemos uma solicita√ß√£o para redefinir a senha da sua conta no OAB\n        Atende.\n      </Preview>\n\n      <Tailwind>\n        <Body className=\"bg-gray-100 font-sans\">\n          <Container className=\"bg-white border border-gray-200 rounded-lg p-8 mx-auto my-8 max-w-xl\">\n            <Heading className=\"text-2xl font-bold text-center text-blue-700 mb-6\">\n              Redefini√ß√£o de Senha - OAB Atende\n            </Heading>\n            <Text className=\"text-gray-700 mb-6\">\n              Ol√°, <b>{name}</b>\n            </Text>\n            <Text className=\"text-gray-700 mb-6\">\n              Recebemos uma solicita√ß√£o para redefinir a senha da sua conta no\n              OAB Atende. Use o c√≥digo abaixo para concluir o processo de\n              redefini√ß√£o:\n            </Text>\n            <Section className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n              <Text className=\"text-2xl font-bold text-center text-blue-700\">\n                {code}\n              </Text>\n            </Section>\n            <Text className=\"text-gray-700 mb-6\">\n              Agora, clique no bot√£o abaixo para ser redirecionado √† p√°gina de\n              redefini√ß√£o de senha:\n            </Text>\n            <Button\n              href={link}\n              className=\"bg-blue-600 text-white font-bold py-3 px-6 rounded-lg text-center block\"\n            >\n              Redefinir Senha\n            </Button>\n            <Hr className=\"border-gray-200 my-6\" />\n            <Text className=\"text-sm text-gray-500 text-center\">\n              Se voc√™ n√£o solicitou a redefini√ß√£o de senha, por favor ignore\n              este e-mail ou entre em contato com nosso suporte.\n            </Text>\n            <Hr className=\"border-gray-200 my-6\" />\n            <Text className=\"text-xs text-gray-400 text-center\">\n              &copy; {currentYear} OAB Atende. Todos os direitos reservados.\n            </Text>\n            <Text className=\"text-xs text-gray-400 text-center\">\n              Este e-mail foi enviado em {sendDate}.\n            </Text>\n          </Container>\n        </Body>\n      </Tailwind>\n    </Html>\n  )\n}\n","export function generateRecoveryCode(length = 6): string {\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n  let code = ''\n\n  // Gera o c√≥digo aleat√≥rio com base na quantidade desejada\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characters.length)\n    code += characters[randomIndex]\n  }\n\n  return code\n}\n"],"mappings":"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","names":["import_zod"]}